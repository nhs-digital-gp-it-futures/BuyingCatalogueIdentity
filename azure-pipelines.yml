variables:
  dockerVersion: '19.03.5'
  dotnetVersion: '3.1.101'

trigger:
- master
- development

pr:
- master
- development

pool:
  vmImage: windows-2019

jobs:
- job: build
  displayName: Build app and run tests

  steps:
  - task: MSBuild@1
    displayName: 'Build GPITFutures ISAPI Database'
    inputs:
      solution: '**/*.sqlproj'
      clean: true

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(agent.builddirectory)'
      Contents: '**'
      TargetFolder: '$(build.artifactstagingdirectory)\sql'
      CleanTargetFolder: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\sql'
      ArtifactName: 'sql'
      publishLocation: 'Container'

- job: dockerBuildAndPush
  displayName: Build and push docker containers to the acr

  pool:
    vmImage: 'ubuntu-latest'

  steps:

  - task: UseDotNet@2
    displayName: 'Use DotNet Core 3.1'
    inputs:
      version: $(dotnetVersion)
      includePreviewVersions: false

  - task: DockerInstaller@0
    inputs:
      dockerVersion: $(dockerVersion)

  - script: echo "127.0.0.1       host.docker.internal" | sudo tee -a /etc/hosts
    displayName: 'Resolve host.docker.internal'

  - script: docker-compose up --build -d
    displayName: 'Docker up'

  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: test
      projects: '**/*UnitTests.csproj'
      arguments: '-v n  --collect "Code coverage"'

  - script: curl http://host.docker.internal:8072/home -v
    displayName: 'Assert host is able to resolve host.docker.internal'
    
  - task: DotNetCoreCLI@2
    displayName: 'Run Integration tests'
    inputs:
      command: test
      projects: '**/*IntegrationTests.csproj'
      arguments: '-v n'

  - script: docker-compose down -v
    displayName: 'Docker down'

  - task: DockerCompose@0
    displayName: 'Build: Dev'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesdevacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-dev-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesdevacr"}'
      dockerComposeFile: '**/docker-compose-build.yml'
      action: 'Build services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true

  - task: DockerCompose@0
    displayName: 'Push: Dev'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      azureContainerRegistry: '{"loginServer":"gpitfuturesdevacr.azurecr.io", "id" : "/subscriptions/7b12a8a2-f06f-456f-b6f9-aa2d92e0b2ec/resourceGroups/gpitfutures-dev-rg-acr/providers/Microsoft.ContainerRegistry/registries/gpitfuturesdevacr"}'
      dockerComposeFile: '**/docker-compose-build.yml'
      action: 'Push services'
      additionalImageTags: '$(Build.BuildNumber)'
      includeSourceTags: true