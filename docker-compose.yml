version: '3.8'

x-networked: &networked
  networks:
    - nhsd_bcnetwork

x-depends-on-db: &dependsOnDb
  <<: *networked
  depends_on:
    - nhsd.buyingcatalogue.identity.api.user.db

x-sa-password: &saPassword
  - SA_PASSWORD: "MyTestPassword123!"

services:
  nhsd.buyingcatalogue.identity.api.user.db:
    <<: *networked
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: identity_api_user_db
    volumes:
      - type: volume
        source: nhsd_identity_user_db_volume
        target: /var/opt/mssql/
    environment:
      <<: *saPassword
      ACCEPT_EULA: "Y"
    healthcheck:
      test: '/opt/mssql-tools/bin/sqlcmd -b -d CatalogueUsers -U sa -P $${SA_PASSWORD} -Q "IF NOT EXISTS (SELECT * FROM dbo.[Organisations]) THROW 50000, ''Not ready'', 0;"'
      interval: 20s
      retries: 4
      start_period: 40s
      timeout: 10s
    ports:
      - "${NHSD_LOCAL_DB_PORT:-1533}:1433"

  dacpac.deploy:
    <<: *dependsOnDb
    image: ${REGISTRY:-nhsd}/buying-catalogue/isapi-db-deploy:${TAG:-latest}
    container_name: identity_api_user_db_deploy
    build:
      context: "."
      dockerfile: "src/NHSD.BuyingCatalogue.Identity.UserDatabase.Deployment/Dockerfile"
    environment:
      <<: *saPassword
      DB_NAME: "CatalogueUsers"
      DB_SERVER: nhsd.buyingcatalogue.identity.api.user.db
      NHSD_PASSWORD: "DisruptTheMarket1!" 
      INSERT_TEST_DATA: "True"
      CREATE_EA_USER: "True"
      EA_USER_FIRST_NAME: "Agency"
      EA_USER_LAST_NAME: "User"
      EA_USER_EMAIL: "user@agency.com"
      EA_USER_PASSWORD_HASH: "AQAAAAEAACcQAAAAEEOFkNNrFpKmDC2TBv2CP/dzxfnjdXk97RoqRlunE/CGs2tmFcewKZj4M/fITiP2tg=="
      EA_USER_PHONE: "01234567890"     

  nhsd.buyingcatalogue.identity.api:
    <<: *networked
    image: ${REGISTRY:-nhsd}/buying-catalogue/identity-isapi:${TAG:-latest}
    container_name: identity_api
    build: 
      context: .
      dockerfile: src/NHSD.BuyingCatalogue.Identity.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTPS_PORT=9070
      - ASPNETCORE_Kestrel__Certificates__Default__Password=changeit
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/certs/localhost.pfx
      - ASPNETCORE_URLS=https://+:443
      - CLIENTS__1__REDIRECTURLS__0=https://localhost:9072/signin-oidc
      - CLIENTS__1__REDIRECTURLS__1=https://host.docker.internal:9072/signin-oidc
      - CLIENTS__1__POSTLOGOUTREDIRECTURLS__0=https://localhost:9072/signout-callback-oidc
      - CLIENTS__1__POSTLOGOUTREDIRECTURLS__1=https://host.docker.internal:9072/signout-callback-oidc
      - ConnectionStrings__CatalogueUsers=${NHSD_CATALOGUEUSERS_DB:-Data Source=nhsd.buyingcatalogue.identity.api.user.db;Initial Catalog=CatalogueUsers;MultipleActiveResultSets=True;User ID=NHSD-ISAPI;Password=DisruptTheMarket1!}
      - ISSUERURL=https://host.docker.internal:9070/identity
      - SmtpServer__Host=nhsd.buyingcatalogue.email
      - SmtpServer__Port=587
      - SmtpServer__emailSubjectPrefix=INTEGRATION_TEST
      - AllowInvalidCertificate=True   
      - PUBLICBROWSE__BASEADDRESS=http://host.docker.internal:8076/publicbrowse
      - PUBLICBROWSE__LOGINPATH=/re-login
      - PUBLICBROWSE__LOGOUTPATH=/logout-callback
    depends_on:
      - nhsd.buyingcatalogue.identity.api.user.db
      - nhsd.buyingcatalogue.email
      - nhsd.pb.wiremock
    entrypoint: 
      - /bin/sh
      - -c 
      - ip route | awk '/default/ { print $$3 " host.docker.internal"}' >> /etc/hosts && dotnet /app/NHSD.BuyingCatalogue.Identity.Api.dll
    ports:
      - "9070:443"
    volumes:
      - "./mkcert:/certs:ro"

  nhsd.pb.wiremock:
    <<: *networked
    container_name: pb_wiremock
    image: ${REGISTRY:-nhsd}/buying-catalogue/pb-wiremock:${TAG:-latest}
    build: 
      context: tests/NHSD.BuyingCatalogue.Identity.Api.IntegrationTests/Tools/WireMock/PublicBrowse
      dockerfile: Dockerfile
    ports:
      - "8076:80"

  nhsd.buyingcatalogue.identity.api.broken.smtp:
    <<: *networked
    image: ${REGISTRY:-nhsd}/buying-catalogue/identity-isapi:${TAG:-latest}
    container_name: identity_api_broken_smtp
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__CatalogueUsers=${NHSD_CATALOGUEUSERS_DB:-Data Source=nhsd.buyingcatalogue.identity.api.user.db;Initial Catalog=CatalogueUsers;MultipleActiveResultSets=True;User ID=NHSD-ISAPI;Password=DisruptTheMarket1!}
      - SmtpServer__Host=broken.smtp
      - SmtpServer__Port=1337
    depends_on:
      - nhsd.buyingcatalogue.identity.api
    ports:
      - "8170:80"

  nhsd.buyingcatalogue.organisations.api:
    <<: *networked
    image: ${REGISTRY:-nhsd}/buying-catalogue/organisations-api:${TAG:-latest}
    container_name: organisations_api
    build: 
      context: .
      dockerfile: src/NHSD.BuyingCatalogue.Organisations.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=changeit
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/certs/localhost.pfx
      - ASPNETCORE_HTTPS_PORT=9075
      - AUTHORITY=https://host.docker.internal:9070/identity
      - ConnectionStrings__CatalogueUsers=${NHSD_CATALOGUEUSERS_DB:-Data Source=nhsd.buyingcatalogue.identity.api.user.db;Initial Catalog=CatalogueUsers;MultipleActiveResultSets=True;User ID=NHSD-ISAPI;Password=DisruptTheMarket1!}
      - AllowInvalidCertificate=True
      - ODS__APIBASEURL=http://nhsd.ods.api.wiremock/ORD/2-0-0
      - ODS__BUYERORGANISATIONROLEIDS__0=Buyer
      - ODS__BUYERORGANISATIONROLEIDS__1=AlsoBuyer
    depends_on:
      - nhsd.buyingcatalogue.identity.api.user.db
      - nhsd.ods.api.wiremock
    entrypoint: 
      - /bin/sh
      - -c 
      - ip route | awk '/default/ { print $$3 " host.docker.internal"}' >> /etc/hosts && dotnet /app/NHSD.BuyingCatalogue.Organisations.Api.dll
    ports:
      - "9075:443"
    volumes:
      - "./mkcert:/certs:ro"

  nhsd.ods.api.wiremock:
    <<: *networked
    container_name: ods_api_wiremock
    image: ${REGISTRY:-nhsd}/buying-catalogue/ods-api-wiremock:${TAG:-latest}
    build: 
      context: tests/NHSD.BuyingCatalogue.Organisations.Api.IntegrationTests/WireMock/Ods
      dockerfile: Dockerfile      
    ports:
      - "8080:80"

  nhsd.buyingcatalogue.identity.api.sampleresource:
    <<: *networked
    image: ${REGISTRY:-nhsd}/buying-catalogue/identity/api-sampleresource:${TAG:-latest}
    container_name: identity_api_sample_resource
    build: 
      context: .
      dockerfile: samples/NHSD.BuyingCatalogue.Identity.Api.SampleResource/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=changeit
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/certs/localhost.pfx
      - ASPNETCORE_HTTPS_PORT=9071
      - AUTHORITY=https://host.docker.internal:9070/identity
      - CAROOT=/certs
    ports:
      - "9071:443"
    volumes:
      - "./mkcert:/certs:ro"
        
  nhsd.buyingcatalogue.identity.api.samplemvcclient:
    <<: *networked
    image: ${REGISTRY:-nhsd}/buying-catalogue/identity/api-samplemvcclient:${TAG:-latest}
    container_name: identity_api_sample_mvc_client
    build: 
      context: .
      dockerfile: samples/NHSD.BuyingCatalogue.Identity.Api.SampleMvcClient/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=changeit
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/certs/localhost.pfx
      - ASPNETCORE_HTTPS_PORT=9072
      - AUTHORITY=https://host.docker.internal:9070/identity
      - CAROOT=/certs
      - SAMPLERESOURCEURL=https://host.docker.internal:9071/identity
    ports:
      - "9072:443"
    volumes:
      - "./mkcert:/certs:ro"

  nhsd.buyingcatalogue.identity.api.samplemvcclient.invalidsecret:
    <<: *networked
    image: ${REGISTRY:-nhsd}/buying-catalogue/identity/api-samplemvcclient:${TAG:-latest}
    container_name: identity_api_sample_mvc_client_invalidsecret
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=changeit
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/certs/localhost.pfx
      - ASPNETCORE_HTTPS_PORT=9073
      - AUTHORITY=https://host.docker.internal:9070/identity
      - SAMPLERESOURCEURL=https://host.docker.internal:9071/identity
      - CAROOT=/certs
      - CLIENTSECRET=Invalid
    ports:
      - "9073:443"
    volumes:
      - "./mkcert:/certs:ro"
    
  selenium-hub:
    image: selenium/hub:latest
    container_name: selenium-hub
    ports:
      - "4444:4444"

  chrome:
    image: ${REGISTRY:-nhsd}/buying-catalogue/identity/chrome-node:${TAG:-latest}
    build: 
      context: .
      dockerfile: tests/NHSD.BuyingCatalogue.Identity.Api.IntegrationTests/Tools/Selenium/Dockerfile
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
    shm_size: 2G
    entrypoint: 
      - /bin/sh
      - -c 
      - ip route | awk '/default/ { print $$3 " host.docker.internal"}' | sudo tee -a /etc/hosts && /opt/bin/entry_point.sh

  nhsd.buyingcatalogue.email:
    <<: *networked
    image: ${REGISTRY:-nhsd}/buying-catalogue/smtp-server:${TAG:-latest}
    container_name: smtp_server
    build: 
      context: src/NHSD.BuyingCatalogue.Smtp
    ports:
      - "1025:25"
      - "1180:80"
      - "1587:587"

networks: 
  nhsd_bcnetwork:
    name: nhsd_bcnetwork
    driver: bridge

volumes:
  nhsd_identity_user_db_volume:
    name: nhsd_identity_user_db_volume
